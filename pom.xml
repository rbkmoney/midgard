<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.rbkmoney</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
    </parent>

    <groupId>com.rbkmoney</groupId>
    <artifactId>midgard</artifactId>
    <version>1.7.0-SNAPSHOT</version>

    <name>midgard</name>
    <description>Application for work with clearing data</description>

    <properties>
        <project.maintainer>Dmitrii Baikov &lt;d.baykov@rbkmoney.com&gt;</project.maintainer>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <dockerfile.base.service.tag>c0d0900ec19c907d866f8360031a836049985110</dockerfile.base.service.tag>
        <dockerfile.registry>dr2.rbkmoney.com</dockerfile.registry>
        <!-- RBK.Money environment settings -->
        <damsel.version>1.336-b563890</damsel.version>
        <fistful-proto.version>1.37-b3ce731</fistful-proto.version>
        <shared.resources.version>0.3.6</shared.resources.version>
        <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.cobertura.reportPath>target/site/cobertura/coverage.xml</sonar.cobertura.reportPath>
        <!-- Ports -->
        <server.port>8022</server.port>
        <exposed.ports>${server.port}</exposed.ports>
        <!-- Environment settings -->
        <flyway.version>5.2.4</flyway.version>
        <jooq.version>3.11.7</jooq.version>
        <otj-pg-embedded>0.12.5</otj-pg-embedded>
        <postgresql.jdbc.version>42.2.5</postgresql.jdbc.version>
        <HikariCP>3.3.1</HikariCP>
        <!-- Props for local PG. It's need for getting jooq files at build time -->
        <local.pg.port>15432</local.pg.port>
        <local.pg.db.name>midgard</local.pg.db.name>
        <local.db.url>jdbc:postgresql://localhost:${local.pg.port}/${local.pg.db.name}</local.db.url>
        <local.db.clearing.scheme>midgard</local.db.clearing.scheme>
        <local.db.feed.scheme>feed</local.db.feed.scheme>
        <local.db.user>postgres</local.db.user>
        <local.db.password>postgres</local.db.password>
        <!-- Primary PG server -->
        <db.url>jdbc:postgresql://localhost:5432/midgard</db.url>
        <db.user>postgres</db.user>
        <db.password>postgres</db.password>
        <db.schema>midgard</db.schema>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>shared-resources</artifactId>
            <version>${shared.resources.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-validator</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>spring-boot-starter-metrics-statsd</artifactId>
            <version>1.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.4</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.jdbc.version}</version>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${HikariCP}</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta-extensions</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen-maven</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.9.8</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.9.8</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney.maven.plugins</groupId>
            <artifactId>pg-embedded-plugin</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney.geck</groupId>
            <artifactId>serializer</artifactId>
            <version>0.6.4</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <version>2.2.4.RELEASE</version>
        </dependency>

        <!-- RBK.Money -->
        <dependency>
            <groupId>com.rbkmoney.logback</groupId>
            <artifactId>nop-rolling</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>kafka-common-lib</artifactId>
            <version>0.0.9</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>sink-common-lib</artifactId>
            <version>0.0.3</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>machinegun-proto</artifactId>
            <version>1.12-ebae56f</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>5.2</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>midgard-proto</artifactId>
            <version>1.18-fce336a</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>eventstock-client-damsel</artifactId>
            <version>1.2.7</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>eventstock-client-fistful</artifactId>
            <version>1.2.7</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>damsel</artifactId>
            <version>${damsel.version}</version>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>fistful-proto</artifactId>
            <version>${fistful-proto.version}</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.benas</groupId> <!-- Ha Ha! Benis! -->
            <artifactId>random-beans</artifactId>
            <version>3.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney.hg-mock</groupId>
            <artifactId>generator</artifactId>
            <version>0.9.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.opentable.components</groupId>
            <artifactId>otj-pg-embedded</artifactId>
            <version>${otj-pg-embedded}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>1.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.rbkmoney</groupId>
            <artifactId>easyway</artifactId>
            <version>0.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.benas</groupId>
            <artifactId>random-beans</artifactId>
            <version>3.6.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.build.directory}/maven-shared-archive-resources</directory>
                <targetPath>${project.build.directory}</targetPath>
                <includes>
                    <include>Dockerfile</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${project.build.directory}/maven-shared-archive-resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>Dockerfile</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.rbkmoney.maven.plugins</groupId>
                <artifactId>pg-embedded-plugin</artifactId>
                <version>1.4</version>
                <configuration>
                    <port>${local.pg.port}</port>
                    <dbName>midgard</dbName>
                    <schemas>
                        <schema>midgard</schema>
                    </schemas>
                </configuration>
                <executions>
                    <execution>
                        <id>PG_server_start</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>PG_server_stop</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>
                <configuration>
                    <url>${local.db.url}</url>
                    <user>${local.db.user}</user>
                    <password>${local.db.password}</password>
                    <schemas>
                        <schema>${local.db.clearing.scheme}</schema>
                    </schemas>
                </configuration>
                <executions>
                    <execution>
                        <id>migrate</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgresql.jdbc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.11.7</version>
                <configuration>
                    <jdbc>
                        <driver>org.postgresql.Driver</driver>
                        <url>${local.db.url}</url>
                        <user>${local.db.user}</user>
                        <password>${local.db.password}</password>
                    </jdbc>
                    <generator>
                        <generate>
                            <javaTimeTypes>true</javaTimeTypes>
                            <pojos>true</pojos>
                            <pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
                            <pojosToString>true</pojosToString>
                        </generate>
                        <database>
                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                            <includes>.*</includes>
                            <excludes>schema_version|.*func|get_adjustment.*|get_cashflow.*|get_payment.*|get_payout.*|get_refund.*</excludes>
                            <schemata>
                                <schema>
                                    <inputSchema>${local.db.clearing.scheme}</inputSchema>
                                </schema>
                                <schema>
                                    <inputSchema>${local.db.feed.scheme}</inputSchema>
                                </schema>
                            </schemata>
                        </database>
                        <target>
                            <directory>target/generated-sources/</directory>
                        </target>
                    </generator>
                </configuration>
                <executions>
                    <execution>
                        <id>gen-src</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.2</version>
                <configuration>
                    <destFile>${sonar.jacoco.reportPath}</destFile>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-remote-resources-plugin</artifactId>
                <version>1.6.0</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.shared</groupId>
                        <artifactId>maven-filtering</artifactId>
                        <version>1.3</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <resourceBundles>
                        <resourceBundle>com.rbkmoney:shared-resources:${shared.resources.version}</resourceBundle>
                    </resourceBundles>
                    <attachToMain>false</attachToMain>
                    <attachToTest>false</attachToTest>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
